<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutBoxBulgarianTranslation" xml:space="preserve">
    <value>Bulgarian translation by sstanev</value>
  </data>
  <data name="AboutBoxCopyright" xml:space="preserve">
    <value>© 2011-2013 Sergey “SnakE” Gromov</value>
  </data>
  <data name="AboutBoxDevelopedFor" xml:space="preserve">
    <value>Developed for</value>
  </data>
  <data name="AboutBoxIconsBy" xml:space="preserve">
    <value>This software uses icons by Mark James</value>
  </data>
  <data name="AboutBoxProgramTitle" xml:space="preserve">
    <value>Fil Converter</value>
    <comment>Program name</comment>
  </data>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>About</value>
    <comment>About box title</comment>
  </data>
  <data name="Apple2ColorFillToggleTooltip" xml:space="preserve">
    <value>Fill colors</value>
    <comment>Tooltip for a button that enables filling black pixels with neighbour pixel colors in the Apple II color mode</comment>
  </data>
  <data name="Apple2PaletteToggleTooltip" xml:space="preserve">
    <value>European (PAL)/American (NTSC) palette</value>
    <comment>Tooltip for a button that switches between a European (PAL) and American (NTSC) palette in the Apple II color mode</comment>
  </data>
  <data name="AspectToggleTooltip" xml:space="preserve">
    <value>Native display proportions</value>
    <comment>Tooltip for a button that switches between displaying square pixels and native proportions of the original hardware</comment>
  </data>
  <data name="ColorDitherToggleTooltip" xml:space="preserve">
    <value>Color dithering</value>
    <comment>Tooltip for a button that enables color ditering in encoded images</comment>
  </data>
  <data name="EncodingToolbarTitle" xml:space="preserve">
    <value>Encoding:</value>
    <comment>Encoding options toolbar title</comment>
  </data>
  <data name="FormatNameApple2" xml:space="preserve">
    <value>Apple ][</value>
    <comment>Image format combo-box entry for Apple II</comment>
  </data>
  <data name="FormatNameApple2NTSC" xml:space="preserve">
    <value>Apple ][ NTSC</value>
    <comment>Image format combo-box entry for Apple II with NTSC TV-set imitation</comment>
  </data>
  <data name="FormatNameGR7" xml:space="preserve">
    <value>GR7</value>
    <comment>Image format combo-box entry for 64x64, 16 colors</comment>
  </data>
  <data name="FormatNameHGR" xml:space="preserve">
    <value>HGR</value>
    <comment>Image format combo-box entry for 256x256, 2 colors</comment>
  </data>
  <data name="FormatNameHGR9" xml:space="preserve">
    <value>HGR9</value>
    <comment>Image format combo-box entry for 512x256, 2 colors</comment>
  </data>
  <data name="FormatNameMGR" xml:space="preserve">
    <value>MGR</value>
    <comment>Image format combo-box entry for 128x128, 16 colors</comment>
  </data>
  <data name="FormatNameMGR9" xml:space="preserve">
    <value>MGR9</value>
    <comment>Image format combo-box entry for 256x256, 4 colors</comment>
  </data>
  <data name="FormatNameOriginal" xml:space="preserve">
    <value>Original</value>
    <comment>Image format combo-box entry for no conversion</comment>
  </data>
  <data name="FormatNamePicler" xml:space="preserve">
    <value>Picler (bol)</value>
    <comment>Image format combo-box entry for Picler (ZX Spectrum format with deinterleaved lines)</comment>
  </data>
  <data name="FormatNameSpectrum" xml:space="preserve">
    <value>ZX Spectrum</value>
    <comment>Image format combo-box entry for ZX Spectrum</comment>
  </data>
  <data name="LeftPreviewDefaultTitle" xml:space="preserve">
    <value>Original:</value>
    <comment>Title of the left preview</comment>
  </data>
  <data name="MainWindowTitle" xml:space="preserve">
    <value>Fil Converter</value>
    <comment>Main window title</comment>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>_File</value>
    <comment>Main menu section</comment>
  </data>
  <data name="MenuFileExit" xml:space="preserve">
    <value>E_xit</value>
    <comment>Main menu item</comment>
  </data>
  <data name="MenuFileOpen" xml:space="preserve">
    <value>_Open...</value>
    <comment>Main menu item</comment>
  </data>
  <data name="MenuFileSaveAs" xml:space="preserve">
    <value>Save _As...</value>
    <comment>Main menu item</comment>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>_Help</value>
    <comment>Main menu section</comment>
  </data>
  <data name="MenuHelpAbout" xml:space="preserve">
    <value>_About...</value>
    <comment>Main menu item</comment>
  </data>
  <data name="MenuLanguage" xml:space="preserve">
    <value>_Language</value>
    <comment>Main menu section</comment>
  </data>
  <data name="MenuLanguageAuto" xml:space="preserve">
    <value>_Auto</value>
    <comment>Language menu item</comment>
  </data>
  <data name="MenuLanguageBulgarian" xml:space="preserve">
    <value>Български (_bg)</value>
    <comment>Language menu item</comment>
  </data>
  <data name="MenuLanguageEnglish" xml:space="preserve">
    <value>English (_en)</value>
    <comment>Language menu item</comment>
  </data>
  <data name="MenuLanguageRussian" xml:space="preserve">
    <value>Русский (_ru)</value>
    <comment>Language menu item</comment>
  </data>
  <data name="OkButtonTitle" xml:space="preserve">
    <value>OK</value>
    <comment>Confirmation button title</comment>
  </data>
  <data name="PreviewPictureScaleFitWindow" xml:space="preserve">
    <value>Fit window</value>
    <comment>Picture scale combo-box entry</comment>
  </data>
  <data name="RightPreviewDefaultTitle" xml:space="preserve">
    <value>Preview:</value>
    <comment>Title of the right preview</comment>
  </data>
</root>